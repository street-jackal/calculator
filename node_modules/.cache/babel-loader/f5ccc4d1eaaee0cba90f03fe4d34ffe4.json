{"ast":null,"code":"import _classCallCheck from\"/home/jon/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jon/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/jon/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/jon/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/jon/calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import ReactDOM from'react-dom';import'./index.css';import reportWebVitals from'./reportWebVitals';// evaluate the input string. trims off anything other than a number at end of string\nfunction evaluate(input){if(input!==0){if(/[^0-9]/.test(input.slice(-1))){input=input.slice(0,-1);}return Function('return '+input)();}return 0;}var Calculator=/*#__PURE__*/function(_React$Component){_inherits(Calculator,_React$Component);var _super=_createSuper(Calculator);function Calculator(props){var _this;_classCallCheck(this,Calculator);_this=_super.call(this,props);_this.state={input:\"0\",output:\"0\",currentChar:\"\",hasDecimal:false};_this.handleInput=_this.handleInput.bind(_assertThisInitialized(_this));return _this;}// main method to handle all the varius input cases\n_createClass(Calculator,[{key:\"handleInput\",value:function handleInput(e){// run evaluate if enter key is pressed, set output display to show formula\nif(e.target.value===\"=\"){this.setState({output:this.state.input,input:evaluate(this.state.input)});}// clear input, output, currentChar if AC key is pressed\nelse if(e.target.value===\"clear\"){this.setState({input:0,output:0,currentChar:\"\"});}/* \n    if input screen is clear, allow only numbers or '-' or '.' \n    clear the initial zero before adding matching input\n    */else if(this.state.input==0){if(/[0-9]|-|\\./.test(e.target.value)){this.setState({input:e.target.value,currentChar:e.target.value,hasDecimal:e.target.value==='.'?true:false});}}/*\n    if input screen is not zero, and key pressed is an operator,\n    and currentChar is not also an operator, append operator to end of input \n    */else if(/\\*|\\/|\\+|-/.test(e.target.value)){if(/[0-9]/.test(this.state.currentChar)){this.setState({input:this.state.input+e.target.value,currentChar:e.target.value,hasDecimal:false});}// allow '-' after an operator other than itself\nelse if(this.state.currentChar!=='-'&&e.target.value==='-'){this.setState({input:this.state.input+e.target.value,currentChar:e.target.value,hasDecimal:false});}// if last char is '-' and a '+' is entered, replace it\nelse if(this.state.currentChar==='-'&&e.target.value==='+'){this.setState({input:this.state.input.slice(0,-2)+e.target.value,currentChar:e.target.value,hasDecimal:false});}// if last char is an operator, replace with new operator if one is entered\nelse if(/[^0-9]/.test(this.state.currentChar)){this.setState({input:this.state.input.slice(0,-1)+e.target.value,currentChar:e.target.value});}}// make sure there's only one decimal allowed\nelse if(e.target.value==='.'){if(!this.state.hasDecimal){this.setState({input:this.state.input+'.',currentChar:'.',hasDecimal:true});}}else{this.setState({input:this.state.input+e.target.value,currentChar:e.target.value});}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"calcBackground\",children:[/*#__PURE__*/_jsx(OutputScreen,{className:\"output\",value:this.state.output}),/*#__PURE__*/_jsx(InputScreen,{className:\"input\",value:this.state.input}),/*#__PURE__*/_jsxs(\"div\",{id:\"buttonBackground\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"clear\",value:\"clear\",onClick:this.handleInput,children:\"AC\"}),/*#__PURE__*/_jsx(\"button\",{id:\"divide\",value:\"/\",className:\"operator\",onClick:this.handleInput,children:\"/\"}),/*#__PURE__*/_jsx(\"button\",{id:\"multiply\",value:\"*\",className:\"operator\",onClick:this.handleInput,children:\"*\"}),/*#__PURE__*/_jsx(\"button\",{id:\"subtract\",value:\"-\",className:\"operator\",onClick:this.handleInput,children:\"-\"}),/*#__PURE__*/_jsx(\"button\",{id:\"seven\",value:\"7\",onClick:this.handleInput,children:\"7\"}),/*#__PURE__*/_jsx(\"button\",{id:\"eight\",value:\"8\",onClick:this.handleInput,children:\"8\"}),/*#__PURE__*/_jsx(\"button\",{id:\"nine\",value:\"9\",onClick:this.handleInput,children:\"9\"}),/*#__PURE__*/_jsx(\"button\",{id:\"four\",value:\"4\",onClick:this.handleInput,children:\"4\"}),/*#__PURE__*/_jsx(\"button\",{id:\"five\",value:\"5\",onClick:this.handleInput,children:\"5\"}),/*#__PURE__*/_jsx(\"button\",{id:\"six\",value:\"6\",onClick:this.handleInput,children:\"6\"}),/*#__PURE__*/_jsx(\"button\",{id:\"add\",value:\"+\",className:\"operator\",onClick:this.handleInput,children:\"+\"}),/*#__PURE__*/_jsx(\"button\",{id:\"one\",value:\"1\",onClick:this.handleInput,children:\"1\"}),/*#__PURE__*/_jsx(\"button\",{id:\"two\",value:\"2\",onClick:this.handleInput,children:\"2\"}),/*#__PURE__*/_jsx(\"button\",{id:\"three\",value:\"3\",onClick:this.handleInput,children:\"3\"}),/*#__PURE__*/_jsx(\"button\",{id:\"zero\",value:\"0\",onClick:this.handleInput,children:\"0\"}),/*#__PURE__*/_jsx(\"button\",{id:\"decimal\",value:\".\",onClick:this.handleInput,children:\".\"}),/*#__PURE__*/_jsx(\"button\",{id:\"equals\",value:\"=\",onClick:this.handleInput,children:\"=\"})]})]});}}]);return Calculator;}(React.Component);var InputScreen=/*#__PURE__*/function(_React$Component2){_inherits(InputScreen,_React$Component2);var _super2=_createSuper(InputScreen);function InputScreen(){_classCallCheck(this,InputScreen);return _super2.apply(this,arguments);}_createClass(InputScreen,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{id:\"display\",className:this.props.className,value:this.props.value,children:this.props.value});}}]);return InputScreen;}(React.Component);var OutputScreen=/*#__PURE__*/function(_React$Component3){_inherits(OutputScreen,_React$Component3);var _super3=_createSuper(OutputScreen);function OutputScreen(){_classCallCheck(this,OutputScreen);return _super3.apply(this,arguments);}_createClass(OutputScreen,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:this.props.className,value:this.props.value,children:this.props.value});}}]);return OutputScreen;}(React.Component);ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Calculator,{})}),document.getElementById('root'));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"sources":["/home/jon/calculator/src/index.js"],"names":["React","ReactDOM","reportWebVitals","evaluate","input","test","slice","Function","Calculator","props","state","output","currentChar","hasDecimal","handleInput","bind","e","target","value","setState","Component","InputScreen","className","OutputScreen","render","document","getElementById"],"mappings":"+wBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA;AACA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACvB,GAAIA,KAAK,GAAK,CAAd,CAAiB,CACf,GAAI,SAASC,IAAT,CAAcD,KAAK,CAACE,KAAN,CAAY,CAAC,CAAb,CAAd,CAAJ,CAAoC,CAClCF,KAAK,CAAGA,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAe,CAAC,CAAhB,CAAR,CACD,CACD,MAAOC,CAAAA,QAAQ,CAAC,UAAYH,KAAb,CAAR,EAAP,CACD,CACD,MAAO,EAAP,CACD,C,GAEKI,CAAAA,U,oHACJ,oBAAYC,KAAZ,CAAmB,4CACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXN,KAAK,CAAE,GADI,CAEXO,MAAM,CAAE,GAFG,CAGXC,WAAW,CAAE,EAHF,CAIXC,UAAU,CAAE,KAJD,CAAb,CAMA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CARiB,aASlB,CAED;uEACYC,C,CAAG,CACb;AACA,GAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,GAAvB,CAA4B,CAC1B,KAAKC,QAAL,CAAc,CAAER,MAAM,CAAE,KAAKD,KAAL,CAAWN,KAArB,CAA4BA,KAAK,CAAED,QAAQ,CAAC,KAAKO,KAAL,CAAWN,KAAZ,CAA3C,CAAd,EACD,CACD;AAHA,IAIK,IAAIY,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,OAAvB,CAAgC,CACnC,KAAKC,QAAL,CAAc,CAAEf,KAAK,CAAE,CAAT,CAAYO,MAAM,CAAE,CAApB,CAAuBC,WAAW,CAAE,EAApC,CAAd,EACD,CACD;AACJ;AACA;AACA,MANS,IAOA,IAAI,KAAKF,KAAL,CAAWN,KAAX,EAAoB,CAAxB,CAA2B,CAC9B,GAAI,aAAaC,IAAb,CAAkBW,CAAC,CAACC,MAAF,CAASC,KAA3B,CAAJ,CAAuC,CACrC,KAAKC,QAAL,CAAc,CACZf,KAAK,CAAEY,CAAC,CAACC,MAAF,CAASC,KADJ,CAEZN,WAAW,CAAEI,CAAC,CAACC,MAAF,CAASC,KAFV,CAGZL,UAAU,CAAEG,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,GAAnB,CAAyB,IAAzB,CAAgC,KAHhC,CAAd,EAKD,CACF,CACD;AACJ;AACA;AACA,MAZS,IAaA,IAAI,aAAab,IAAb,CAAkBW,CAAC,CAACC,MAAF,CAASC,KAA3B,CAAJ,CAAuC,CAC1C,GAAI,QAAQb,IAAR,CAAa,KAAKK,KAAL,CAAWE,WAAxB,CAAJ,CAA0C,CACxC,KAAKO,QAAL,CAAc,CACZf,KAAK,CAAE,KAAKM,KAAL,CAAWN,KAAX,CAAmBY,CAAC,CAACC,MAAF,CAASC,KADvB,CAEZN,WAAW,CAAEI,CAAC,CAACC,MAAF,CAASC,KAFV,CAGZL,UAAU,CAAE,KAHA,CAAd,EAKD,CACD;AAPA,IAQK,IAAG,KAAKH,KAAL,CAAWE,WAAX,GAA2B,GAA3B,EAAkCI,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,GAAxD,CAA4D,CAC/D,KAAKC,QAAL,CAAc,CACZf,KAAK,CAAE,KAAKM,KAAL,CAAWN,KAAX,CAAmBY,CAAC,CAACC,MAAF,CAASC,KADvB,CAEZN,WAAW,CAAEI,CAAC,CAACC,MAAF,CAASC,KAFV,CAGZL,UAAU,CAAE,KAHA,CAAd,EAKD,CACD;AAPK,IAQA,IAAG,KAAKH,KAAL,CAAWE,WAAX,GAA2B,GAA3B,EAAkCI,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,GAAxD,CAA4D,CAC/D,KAAKC,QAAL,CAAc,CACZf,KAAK,CAAE,KAAKM,KAAL,CAAWN,KAAX,CAAiBE,KAAjB,CAAuB,CAAvB,CAAyB,CAAC,CAA1B,EAA+BU,CAAC,CAACC,MAAF,CAASC,KADnC,CAEZN,WAAW,CAAEI,CAAC,CAACC,MAAF,CAASC,KAFV,CAGZL,UAAU,CAAE,KAHA,CAAd,EAKD,CACD;AAPK,IAQA,IAAG,SAASR,IAAT,CAAc,KAAKK,KAAL,CAAWE,WAAzB,CAAH,CAAyC,CAC5C,KAAKO,QAAL,CAAc,CACZf,KAAK,CAAE,KAAKM,KAAL,CAAWN,KAAX,CAAiBE,KAAjB,CAAuB,CAAvB,CAAyB,CAAC,CAA1B,EAA+BU,CAAC,CAACC,MAAF,CAASC,KADnC,CAEZN,WAAW,CAAEI,CAAC,CAACC,MAAF,CAASC,KAFV,CAAd,EAID,CACF,CACD;AAhCK,IAiCA,IAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,GAAvB,CAA4B,CAC/B,GAAI,CAAC,KAAKR,KAAL,CAAWG,UAAhB,CAA4B,CAC1B,KAAKM,QAAL,CAAc,CACZf,KAAK,CAAE,KAAKM,KAAL,CAAWN,KAAX,CAAmB,GADd,CAEZQ,WAAW,CAAE,GAFD,CAGZC,UAAU,CAAE,IAHA,CAAd,EAKD,CACF,CARI,IASA,CACH,KAAKM,QAAL,CAAc,CACZf,KAAK,CAAE,KAAKM,KAAL,CAAWN,KAAX,CAAmBY,CAAC,CAACC,MAAF,CAASC,KADvB,CAEZN,WAAW,CAAEI,CAAC,CAACC,MAAF,CAASC,KAFV,CAAd,EAID,CACF,C,uCAGQ,CACP,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,KAAC,YAAD,EAAc,SAAS,CAAC,QAAxB,CAAiC,KAAK,CAAE,KAAKR,KAAL,CAAWC,MAAnD,EADF,cAEE,KAAC,WAAD,EAAa,SAAS,CAAC,OAAvB,CAA+B,KAAK,CAAE,KAAKD,KAAL,CAAWN,KAAjD,EAFF,cAGE,aAAK,EAAE,CAAC,kBAAR,wBACE,eAAQ,EAAE,CAAC,OAAX,CAAmB,KAAK,CAAC,OAAzB,CAAiC,OAAO,CAAE,KAAKU,WAA/C,gBADF,cAEE,eAAQ,EAAE,CAAC,QAAX,CAAoB,KAAK,CAAC,GAA1B,CAA8B,SAAS,CAAC,UAAxC,CAAmD,OAAO,CAAE,KAAKA,WAAjE,eAFF,cAGE,eAAQ,EAAE,CAAC,UAAX,CAAsB,KAAK,CAAC,GAA5B,CAAgC,SAAS,CAAC,UAA1C,CAAqD,OAAO,CAAE,KAAKA,WAAnE,eAHF,cAIE,eAAQ,EAAE,CAAC,UAAX,CAAsB,KAAK,CAAC,GAA5B,CAAgC,SAAS,CAAC,UAA1C,CAAqD,OAAO,CAAE,KAAKA,WAAnE,eAJF,cAKE,eAAQ,EAAE,CAAC,OAAX,CAAmB,KAAK,CAAC,GAAzB,CAA6B,OAAO,CAAE,KAAKA,WAA3C,eALF,cAME,eAAQ,EAAE,CAAC,OAAX,CAAmB,KAAK,CAAC,GAAzB,CAA6B,OAAO,CAAE,KAAKA,WAA3C,eANF,cAOE,eAAQ,EAAE,CAAC,MAAX,CAAkB,KAAK,CAAC,GAAxB,CAA4B,OAAO,CAAE,KAAKA,WAA1C,eAPF,cAQE,eAAQ,EAAE,CAAC,MAAX,CAAkB,KAAK,CAAC,GAAxB,CAA4B,OAAO,CAAE,KAAKA,WAA1C,eARF,cASE,eAAQ,EAAE,CAAC,MAAX,CAAkB,KAAK,CAAC,GAAxB,CAA4B,OAAO,CAAE,KAAKA,WAA1C,eATF,cAUE,eAAQ,EAAE,CAAC,KAAX,CAAiB,KAAK,CAAC,GAAvB,CAA2B,OAAO,CAAE,KAAKA,WAAzC,eAVF,cAWE,eAAQ,EAAE,CAAC,KAAX,CAAiB,KAAK,CAAC,GAAvB,CAA2B,SAAS,CAAC,UAArC,CAAgD,OAAO,CAAE,KAAKA,WAA9D,eAXF,cAYE,eAAQ,EAAE,CAAC,KAAX,CAAiB,KAAK,CAAC,GAAvB,CAA2B,OAAO,CAAE,KAAKA,WAAzC,eAZF,cAaE,eAAQ,EAAE,CAAC,KAAX,CAAiB,KAAK,CAAC,GAAvB,CAA2B,OAAO,CAAE,KAAKA,WAAzC,eAbF,cAcE,eAAQ,EAAE,CAAC,OAAX,CAAmB,KAAK,CAAC,GAAzB,CAA6B,OAAO,CAAE,KAAKA,WAA3C,eAdF,cAeE,eAAQ,EAAE,CAAC,MAAX,CAAkB,KAAK,CAAC,GAAxB,CAA4B,OAAO,CAAE,KAAKA,WAA1C,eAfF,cAgBE,eAAQ,EAAE,CAAC,SAAX,CAAqB,KAAK,CAAC,GAA3B,CAA+B,OAAO,CAAE,KAAKA,WAA7C,eAhBF,cAiBE,eAAQ,EAAE,CAAC,QAAX,CAAoB,KAAK,CAAC,GAA1B,CAA8B,OAAO,CAAE,KAAKA,WAA5C,eAjBF,GAHF,GADF,CAyBD,C,wBApHsBd,KAAK,CAACoB,S,KAwHzBC,CAAAA,W,uRACK,CACP,mBACE,YAAK,EAAE,CAAC,SAAR,CAAkB,SAAS,CAAE,KAAKZ,KAAL,CAAWa,SAAxC,CAAmD,KAAK,CAAE,KAAKb,KAAL,CAAWS,KAArE,UAA6E,KAAKT,KAAL,CAAWS,KAAxF,EADF,CAGD,C,yBALuBlB,KAAK,CAACoB,S,KAQ1BG,CAAAA,Y,4RACK,CACP,mBACE,YAAK,SAAS,CAAE,KAAKd,KAAL,CAAWa,SAA3B,CAAsC,KAAK,CAAE,KAAKb,KAAL,CAAWS,KAAxD,UAAgE,KAAKT,KAAL,CAAWS,KAA3E,EADF,CAGD,C,0BALwBlB,KAAK,CAACoB,S,EAQjCnB,QAAQ,CAACuB,MAAT,cACE,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,UAAD,IADF,EADF,CAKEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,EAQA;AACA;AACA;AACAxB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n// evaluate the input string. trims off anything other than a number at end of string\nfunction evaluate(input) {\n  if (input !== 0) {\n    if (/[^0-9]/.test(input.slice(-1))) {\n      input = input.slice(0, -1);\n    }\n    return Function('return ' + input)();\n  }\n  return 0;\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"0\",\n      output: \"0\",\n      currentChar: \"\",\n      hasDecimal: false\n    };\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  // main method to handle all the varius input cases\n  handleInput(e) {\n    // run evaluate if enter key is pressed, set output display to show formula\n    if (e.target.value === \"=\") {\n      this.setState({ output: this.state.input, input: evaluate(this.state.input) });\n    }\n    // clear input, output, currentChar if AC key is pressed\n    else if (e.target.value === \"clear\") {\n      this.setState({ input: 0, output: 0, currentChar: \"\" });\n    }\n    /* \n    if input screen is clear, allow only numbers or '-' or '.' \n    clear the initial zero before adding matching input\n    */\n    else if (this.state.input == 0) {\n      if (/[0-9]|-|\\./.test(e.target.value)) {\n        this.setState({\n          input: e.target.value,\n          currentChar: e.target.value,\n          hasDecimal: e.target.value === '.' ? true : false\n        });\n      }\n    }\n    /*\n    if input screen is not zero, and key pressed is an operator,\n    and currentChar is not also an operator, append operator to end of input \n    */\n    else if (/\\*|\\/|\\+|-/.test(e.target.value)) {\n      if (/[0-9]/.test(this.state.currentChar)) {\n        this.setState({\n          input: this.state.input + e.target.value,\n          currentChar: e.target.value,\n          hasDecimal: false\n        });\n      }\n      // allow '-' after an operator other than itself\n      else if(this.state.currentChar !== '-' && e.target.value === '-'){\n        this.setState({\n          input: this.state.input + e.target.value,\n          currentChar: e.target.value,\n          hasDecimal: false\n        });\n      }\n      // if last char is '-' and a '+' is entered, replace it\n      else if(this.state.currentChar === '-' && e.target.value === '+'){\n        this.setState({\n          input: this.state.input.slice(0,-2) + e.target.value,\n          currentChar: e.target.value,\n          hasDecimal: false\n        });\n      }\n      // if last char is an operator, replace with new operator if one is entered\n      else if(/[^0-9]/.test(this.state.currentChar)){\n        this.setState({\n          input: this.state.input.slice(0,-1) + e.target.value,\n          currentChar: e.target.value\n        });\n      }\n    }\n    // make sure there's only one decimal allowed\n    else if (e.target.value === '.') {\n      if (!this.state.hasDecimal) {\n        this.setState({\n          input: this.state.input + '.',\n          currentChar: '.',\n          hasDecimal: true\n        });\n      }\n    }\n    else {\n      this.setState({\n        input: this.state.input + e.target.value,\n        currentChar: e.target.value\n      });\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"calcBackground\" >\n        <OutputScreen className=\"output\" value={this.state.output} />\n        <InputScreen className=\"input\" value={this.state.input} />\n        <div id=\"buttonBackground\">\n          <button id=\"clear\" value=\"clear\" onClick={this.handleInput}>AC</button>\n          <button id=\"divide\" value=\"/\" className=\"operator\" onClick={this.handleInput}>/</button>\n          <button id=\"multiply\" value=\"*\" className=\"operator\" onClick={this.handleInput}>*</button>\n          <button id=\"subtract\" value=\"-\" className=\"operator\" onClick={this.handleInput}>-</button>\n          <button id=\"seven\" value=\"7\" onClick={this.handleInput}>7</button>\n          <button id=\"eight\" value=\"8\" onClick={this.handleInput}>8</button>\n          <button id=\"nine\" value=\"9\" onClick={this.handleInput}>9</button>\n          <button id=\"four\" value=\"4\" onClick={this.handleInput}>4</button>\n          <button id=\"five\" value=\"5\" onClick={this.handleInput}>5</button>\n          <button id=\"six\" value=\"6\" onClick={this.handleInput}>6</button>\n          <button id=\"add\" value=\"+\" className=\"operator\" onClick={this.handleInput}>+</button>\n          <button id=\"one\" value=\"1\" onClick={this.handleInput}>1</button>\n          <button id=\"two\" value=\"2\" onClick={this.handleInput}>2</button>\n          <button id=\"three\" value=\"3\" onClick={this.handleInput}>3</button>\n          <button id=\"zero\" value=\"0\" onClick={this.handleInput}>0</button>\n          <button id=\"decimal\" value=\".\" onClick={this.handleInput}>.</button>\n          <button id=\"equals\" value=\"=\" onClick={this.handleInput}>=</button>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nclass InputScreen extends React.Component {\n  render() {\n    return (\n      <div id=\"display\" className={this.props.className} value={this.props.value}>{this.props.value}</div>\n    );\n  }\n}\n\nclass OutputScreen extends React.Component {\n  render() {\n    return (\n      <div className={this.props.className} value={this.props.value}>{this.props.value}</div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}